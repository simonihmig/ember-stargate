{"version":3,"file":"portal.js","sources":["../../src/components/portal.ts"],"sourcesContent":["import Component from '@glimmer/component';\nimport { service } from '@ember/service';\nimport { next } from '@ember/runloop';\nimport { use, resource } from 'ember-resources';\nimport type PortalService from '../services/-portal';\nimport type { Target } from '../services/-portal';\nimport { setOwner } from '@ember/application';\n\nclass Tracker {\n  @service('-portal')\n  portalService!: PortalService;\n\n  _target?: string;\n\n  modify(newTarget: string): void {\n    const previousTarget = this._target;\n    next(() => {\n      this.portalService.registerPortal(newTarget);\n      if (previousTarget) {\n        this.portalService.unregisterPortal(previousTarget);\n      }\n    });\n    this._target = newTarget;\n  }\n\n  get target(): Target | undefined {\n    return this._target\n      ? this.portalService.getTarget(this._target)\n      : undefined;\n  }\n\n  destroy(): void {\n    if (!this._target) {\n      return;\n    }\n\n    this.portalService.unregisterPortal(this._target);\n  }\n}\n\nfunction PortalTrackerResource(inputFn: () => string): Tracker {\n  const state = new Tracker();\n\n  return resource(({ on, owner }) => {\n    setOwner(state, owner);\n\n    on.cleanup(() => state.destroy());\n\n    return (): Tracker => {\n      state.modify(inputFn());\n\n      return state;\n    };\n  });\n}\n\nexport interface PortalSignature {\n  Args: {\n    target: string;\n    renderInPlace?: boolean;\n    fallback?: 'inplace';\n  };\n  Blocks: { default: [] };\n}\n\nexport default class Portal extends Component<PortalSignature> {\n  @use tracker = PortalTrackerResource(() => this.args.target);\n\n  get target(): Target | undefined {\n    return this.tracker.target;\n  }\n\n  get renderInPlace(): boolean {\n    return (\n      this.args.renderInPlace === true ||\n      (!this.target && this.args.fallback === 'inplace')\n    );\n  }\n}\n"],"names":["Tracker","g","prototype","service","i","void 0","_target","modify","newTarget","previousTarget","next","portalService","registerPortal","unregisterPortal","target","getTarget","undefined","destroy","PortalTrackerResource","inputFn","state","resource","on","owner","setOwner","cleanup","Portal","Component","use","args","tracker","renderInPlace","fallback","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;;;AAQA,MAAMA,OAAO,CAAC;AAAA,EAAA;AAAAC,IAAAA,CAAA,MAAAC,SAAA,EAAA,eAAA,EAAA,CACXC,OAAO,CAAC,SAAS,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,cAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,eAAA,CAAA,EAAAC,MAAA;EAGnBC,OAAO;EAEPC,MAAMA,CAACC,SAAiB,EAAQ;AAC9B,IAAA,MAAMC,cAAc,GAAG,IAAI,CAACH,OAAO;AACnCI,IAAAA,IAAI,CAAC,MAAM;AACT,MAAA,IAAI,CAACC,aAAa,CAACC,cAAc,CAACJ,SAAS,CAAC;AAC5C,MAAA,IAAIC,cAAc,EAAE;AAClB,QAAA,IAAI,CAACE,aAAa,CAACE,gBAAgB,CAACJ,cAAc,CAAC;AACrD,MAAA;AACF,IAAA,CAAC,CAAC;IACF,IAAI,CAACH,OAAO,GAAGE,SAAS;AAC1B,EAAA;EAEA,IAAIM,MAAMA,GAAuB;AAC/B,IAAA,OAAO,IAAI,CAACR,OAAO,GACf,IAAI,CAACK,aAAa,CAACI,SAAS,CAAC,IAAI,CAACT,OAAO,CAAC,GAC1CU,SAAS;AACf,EAAA;AAEAC,EAAAA,OAAOA,GAAS;AACd,IAAA,IAAI,CAAC,IAAI,CAACX,OAAO,EAAE;AACjB,MAAA;AACF,IAAA;IAEA,IAAI,CAACK,aAAa,CAACE,gBAAgB,CAAC,IAAI,CAACP,OAAO,CAAC;AACnD,EAAA;AACF;AAEA,SAASY,qBAAqBA,CAACC,OAAqB,EAAW;AAC7D,EAAA,MAAMC,KAAK,GAAG,IAAIpB,OAAO,EAAE;EAE3B,OAAOqB,QAAQ,CAAC,CAAC;IAAEC,EAAE;AAAEC,IAAAA;AAAM,GAAC,KAAK;AACjCC,IAAAA,QAAQ,CAACJ,KAAK,EAAEG,KAAK,CAAC;IAEtBD,EAAE,CAACG,OAAO,CAAC,MAAML,KAAK,CAACH,OAAO,EAAE,CAAC;AAEjC,IAAA,OAAO,MAAe;AACpBG,MAAAA,KAAK,CAACb,MAAM,CAACY,OAAO,EAAE,CAAC;AAEvB,MAAA,OAAOC,KAAK;IACd,CAAC;AACH,EAAA,CAAC,CAAC;AACJ;AAWe,MAAMM,MAAM,SAASC,SAAS,CAAkB;AAAA,EAAA;IAAA1B,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,SAAA,EAAA,CAC5D0B,GAAG,CAAA,EAAA,YAAA;MAAA,OAAWV,qBAAqB,CAAC,MAAM,IAAI,CAACW,IAAI,CAACf,MAAM,CAAC;AAAA,IAAA,CAAA,CAAA;AAAA;AAAA,EAAA,QAAA,IAAAV,CAAA,CAAA,IAAA,EAAA,SAAA,CAAA,EAAAC,MAAA;EAE5D,IAAIS,MAAMA,GAAuB;AAC/B,IAAA,OAAO,IAAI,CAACgB,OAAO,CAAChB,MAAM;AAC5B,EAAA;EAEA,IAAIiB,aAAaA,GAAY;AAC3B,IAAA,OACE,IAAI,CAACF,IAAI,CAACE,aAAa,KAAK,IAAI,IAC/B,CAAC,IAAI,CAACjB,MAAM,IAAI,IAAI,CAACe,IAAI,CAACG,QAAQ,KAAK,SAAU;AAEtD,EAAA;AACF;AAACC,oBAAA,CAAAC,QAAA,EAboBR,MAAM,CAAA;;;;"}