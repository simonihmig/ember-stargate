{"version":3,"file":"-portal.js","sources":["../../src/services/-portal.ts"],"sourcesContent":["import Service from '@ember/service';\nimport { assert } from '@ember/debug';\nimport { next } from '@ember/runloop';\nimport { TrackedMap } from 'tracked-built-ins';\n\ninterface TargetTrackerOptions {\n  multiple?: boolean;\n  onChange?: (count: number) => void;\n}\n\nexport interface Target {\n  name: string;\n  element: Element;\n  multiple: boolean;\n}\n\nclass TargetTracker implements Target {\n  name: string;\n  element: Element;\n  multiple: boolean;\n  onChange?: (count: number) => void;\n\n  constructor(name: string, element: Element, options: TargetTrackerOptions) {\n    this.name = name;\n    this.element = element;\n    this.multiple = options.multiple ?? false;\n    this.onChange = options.onChange;\n  }\n}\n\nexport default class PortalService extends Service {\n  #targets = new TrackedMap<string, TargetTracker>();\n  #portalCount = new TrackedMap<string, number>();\n\n  getTarget(name: string): Target | undefined {\n    return this.#targets.get(name);\n  }\n\n  getPortalCount(name: string): number {\n    return this.#portalCount.get(name) ?? 0;\n  }\n\n  registerTarget(\n    name: string,\n    element: Element,\n    options: TargetTrackerOptions,\n  ): void {\n    next(this, () => {\n      assert(\n        `Portal target with name ${name} already exists`,\n        !this.#targets.has(name),\n      );\n      this.#targets.set(name, new TargetTracker(name, element, options));\n    });\n  }\n\n  unregisterTarget(name: string): void {\n    this.#targets.delete(name);\n    this.#portalCount.delete(name);\n  }\n\n  registerPortal(name: string): void {\n    next(this, () => {\n      const count = (this.#portalCount.get(name) ?? 0) + 1;\n      this.#portalCount.set(name, count);\n      const target = this.#targets.get(name);\n      if (target && target.onChange) {\n        target.onChange(count);\n      }\n    });\n  }\n\n  unregisterPortal(name: string): void {\n    let count = this.#portalCount.get(name);\n    if (count === undefined) {\n      return;\n    }\n\n    count--;\n    this.#portalCount.set(name, count);\n    const target = this.#targets.get(name);\n    if (target && target.onChange) {\n      target.onChange(count);\n    }\n  }\n}\n\n// DO NOT DELETE: this is how TypeScript knows how to look up your services.\ndeclare module '@ember/service' {\n  interface Registry {\n    '-portal': PortalService;\n  }\n}\n"],"names":["TargetTracker","name","element","multiple","onChange","constructor","options","PortalService","Service","TrackedMap","getTarget","get","getPortalCount","registerTarget","next","assert","has","set","unregisterTarget","delete","registerPortal","count","target","unregisterPortal","undefined"],"mappings":";;;;;AAgBA,MAAMA,aAAa,CAAmB;EACpCC,IAAI;EACJC,OAAO;EACPC,QAAQ;EACRC,QAAQ;AAERC,EAAAA,WAAWA,CAACJ,IAAY,EAAEC,OAAgB,EAAEI,OAA6B,EAAE;IACzE,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;AACtB,IAAA,IAAI,CAACC,QAAQ,GAAGG,OAAO,CAACH,QAAQ,IAAI,KAAK;AACzC,IAAA,IAAI,CAACC,QAAQ,GAAGE,OAAO,CAACF,QAAQ;AAClC,EAAA;AACF;AAEe,MAAMG,aAAa,SAASC,OAAO,CAAC;AACjD,EAAA,QAAQ,GAAG,IAAIC,UAAU,EAAyB;AAClD,EAAA,YAAY,GAAG,IAAIA,UAAU,EAAkB;EAE/CC,SAASA,CAACT,IAAY,EAAsB;IAC1C,OAAO,IAAI,CAAC,QAAQ,CAACU,GAAG,CAACV,IAAI,CAAC;AAChC,EAAA;EAEAW,cAAcA,CAACX,IAAY,EAAU;IACnC,OAAO,IAAI,CAAC,YAAY,CAACU,GAAG,CAACV,IAAI,CAAC,IAAI,CAAC;AACzC,EAAA;AAEAY,EAAAA,cAAcA,CACZZ,IAAY,EACZC,OAAgB,EAChBI,OAA6B,EACvB;IACNQ,IAAI,CAAC,IAAI,EAAE,MAAM;AACfC,MAAAA,MAAM,CACJ,CAAA,wBAAA,EAA2Bd,IAAI,CAAA,eAAA,CAAiB,EAChD,CAAC,IAAI,CAAC,QAAQ,CAACe,GAAG,CAACf,IAAI,CACzB,CAAC;AACD,MAAA,IAAI,CAAC,QAAQ,CAACgB,GAAG,CAAChB,IAAI,EAAE,IAAID,aAAa,CAACC,IAAI,EAAEC,OAAO,EAAEI,OAAO,CAAC,CAAC;AACpE,IAAA,CAAC,CAAC;AACJ,EAAA;EAEAY,gBAAgBA,CAACjB,IAAY,EAAQ;AACnC,IAAA,IAAI,CAAC,QAAQ,CAACkB,MAAM,CAAClB,IAAI,CAAC;AAC1B,IAAA,IAAI,CAAC,YAAY,CAACkB,MAAM,CAAClB,IAAI,CAAC;AAChC,EAAA;EAEAmB,cAAcA,CAACnB,IAAY,EAAQ;IACjCa,IAAI,CAAC,IAAI,EAAE,MAAM;AACf,MAAA,MAAMO,KAAK,GAAG,CAAC,IAAI,CAAC,YAAY,CAACV,GAAG,CAACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACpD,IAAI,CAAC,YAAY,CAACgB,GAAG,CAAChB,IAAI,EAAEoB,KAAK,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAACX,GAAG,CAACV,IAAI,CAAC;AACtC,MAAA,IAAIqB,MAAM,IAAIA,MAAM,CAAClB,QAAQ,EAAE;AAC7BkB,QAAAA,MAAM,CAAClB,QAAQ,CAACiB,KAAK,CAAC;AACxB,MAAA;AACF,IAAA,CAAC,CAAC;AACJ,EAAA;EAEAE,gBAAgBA,CAACtB,IAAY,EAAQ;IACnC,IAAIoB,KAAK,GAAG,IAAI,CAAC,YAAY,CAACV,GAAG,CAACV,IAAI,CAAC;IACvC,IAAIoB,KAAK,KAAKG,SAAS,EAAE;AACvB,MAAA;AACF,IAAA;AAEAH,IAAAA,KAAK,EAAE;IACP,IAAI,CAAC,YAAY,CAACJ,GAAG,CAAChB,IAAI,EAAEoB,KAAK,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAACX,GAAG,CAACV,IAAI,CAAC;AACtC,IAAA,IAAIqB,MAAM,IAAIA,MAAM,CAAClB,QAAQ,EAAE;AAC7BkB,MAAAA,MAAM,CAAClB,QAAQ,CAACiB,KAAK,CAAC;AACxB,IAAA;AACF,EAAA;AACF;;AAEA;;;;"}